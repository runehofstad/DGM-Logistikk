rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    match /companies/{companyId} {
      allow read: if true;
      allow create, update: if request.auth != null && isCompanyMember(companyId);
    }

    match /requests/{requestId} {
      allow read: if true;
      allow create, update, delete: if isRequestOwner();
    }

    match /admin/{docId} {
      allow read, write: if hasRole("superadmin");
    }

    function hasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    function isRequestOwner() {
      return request.auth != null &&
             resource.data.userId == request.auth.uid;
    }

    function isCompanyMember(companyId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == companyId;
    }
  }
}